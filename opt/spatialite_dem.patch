diff --git a/src/spatialite_dem/spatialite_dem.c b/src/spatialite_dem/spatialite_dem.c
index a9ebfd0..7e5fbc2 100644
--- a/src/spatialite_dem/spatialite_dem.c
+++ b/src/spatialite_dem/spatialite_dem.c
@@ -32,11 +32,16 @@
 #include <sys/types.h>
 #endif
 
+#if defined(_WIN32) && !defined(__MINGW32__)
+#include <Winsock2.h>
+#else
+#include <sys/time.h>
 #include <unistd.h>
+#endif
+
 #include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
-#include <sys/time.h>
 #include <time.h>
 
 #if defined(_WIN32) && !defined(__MINGW32__)
@@ -100,6 +105,42 @@
 #else
 #define LENGTHNL 1
 #endif /* not WIN32 */
+
+#if defined(_WIN32) && !defined(__MINGW32__)
+
+#define strtok_r strtok_s
+#define sleep Sleep
+
+// https://git.postgresql.org/gitweb/?p=postgresql.git;a=blob;f=src/port/gettimeofday.c;h=75a91993b74414c0a1c13a2a09ce739cb8aa8a08;hb=HEAD
+
+/* FILETIME of Jan 1 1970 00:00:00. */
+static const unsigned __int64 epoch = 116444736000000000;
+
+/*
+* timezone information is stored outside the kernel so tzp isn't used anymore.
+*
+* Note: this function is not for Win32 high precision timing purpose. See
+* elapsed_time().
+*/
+
+int gettimeofday(struct timeval * tp, struct timezone * tzp)
+{
+    FILETIME    file_time;
+    SYSTEMTIME  system_time;
+    ULARGE_INTEGER ularge;
+
+    GetSystemTime(&system_time);
+    SystemTimeToFileTime(&system_time, &file_time);
+    ularge.LowPart = file_time.dwLowDateTime;
+    ularge.HighPart = file_time.dwHighDateTime;
+
+    tp->tv_sec = (long) ((ularge.QuadPart - epoch) / 10000000L);
+    tp->tv_usec = (long) (system_time.wMilliseconds * 1000);
+
+    return 0;
+}
+
+#endif
 // -- -- ---------------------------------- --
 // Output of time elapse
 // min      = (int)(time_diff.tv_sec/60);
